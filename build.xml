<?xml version="1.0" encoding="UTF-8"?>
<project name="composer" basedir=".">
    <dirname property="composer.basedir" file="${ant.file.composer}"/>
    <target name="init" unless="composer.properties">
        <property name="composer.file" value="composer.properties" />
        <property name="composer.properties" location="${composer.basedir}/${composer.file}" />
        <property file="${composer.properties}" />
        <echo message="using composer properties from ${composer.properties}" level="debug"/>
        <property name="composer.properties.filter" location="${composer.properties.tmp}" />
        <echoproperties destfile="${composer.properties.filter}" prefix="composer."/>
        <echo message="Expanded properties put into ${composer.properties.filter}" />
    </target>
    <target name="exists" description="Check that composer exists">
        <available property="composer.run" file="${composer.phar}" />
    </target>
    <!-- Self-update composer -->
    <target name="self-update" if="composer.self-update" unless="composer.installed" description="Self-update Composer">
        <echo message="Self-updating composer" level="debug"/>
        <exec executable="${composer.phar}">
            <arg value="self-update" />
            <arg value="--quiet" />
            <arg value="--no-interaction" />
        </exec>
        <echo message="composer self-update complete" level="debug"/>
    </target>

    <target name="self-install" unless="composer.run" depends='exists' description="Fetch Composer if it doesn't exist">
        <echo message="Self-installing composer" level="debug"/>
        <property name="composer.installed" value="1"/>
        <property name="composer.run" value="1" />
        <exec executable="/bin/bash">
            <arg value="-c" />
            <arg value="curl -s https://getcomposer.org/installer | php" />
        </exec>
        <echo message="composer self-install complete" level="debug"/>
    </target>

    <target name="composer-get-dependencies" depends="init, self-install, self-update" if="composer.run">
        <condition property="composer.command" value="update" else="install">
            <available file="${composer.lock}"/>
        </condition>
        <echo message="Beginning composer ${composer.command}" level="debug" />
        <exec executable="${composer.phar}">
            <arg value="${composer.command}" />
            <arg value="--no-interaction" />
            <arg value="--optimize-autoloader" />
            <arg value="--dev" />
        </exec>
        <echo message="composer ${composer.command} complete" level="debug"/>
    </target>

    <target name="tests" depends='composer-get-dependencies' description="run unit-tests">
        <exec dir="${basedir}" executable="vendor/bin/phpunit" failonerror="true" output="build/logs/test-log.log">
            <arg line="--bootstrap vendor/autoload.php --log-junit build/logs/test-results.xml tests" />
            <arg line="--log-junit build/logs/test-results.xml tests" />
            <arg line="tests" />
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec dir="${basedir}" executable="vendor/bin/phploc">
            <arg value="--log-xml" />
            <arg value="${basedir}/build/logs/phploc.xml" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <exec dir="${basedir}" executable="vendor/bin/phpcs">
            <arg value="--standard=PSR2" />
            <arg value="--tab-width=4" />
            <arg value="--encoding=utf-8" />
            <arg value="--extensions=php" />
            <arg value="--report=checkstyle" />
            <arg value="--report-file=build/logs/checkstyle.xml" />
            <arg path="src" />
            <arg path="tests" />
        </exec>
    </target>

    <target name="build" depends="init,self-update,self-install,composer-get-dependencies,tests,phploc,phpcs"/>
</project>